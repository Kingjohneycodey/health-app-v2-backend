{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 4000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 4000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 4000"}
{"_message":"User validation failed","errors":{"email":{"kind":"required","message":"Path `email` is required.","name":"ValidatorError","path":"email","properties":{"message":"Path `email` is required.","path":"email","type":"required"}}},"level":"error","message":"Unexpected error: User validation failed: email: Path `email` is required.","stack":"ValidationError: User validation failed: email: Path `email` is required.\n    at model.Document.invalidate (C:\\Users\\JOHNEY\\Documents\\project3\\health-app\\backend\\node_modules\\mongoose\\lib\\document.js:3306:32)\n    at C:\\Users\\JOHNEY\\Documents\\project3\\health-app\\backend\\node_modules\\mongoose\\lib\\document.js:3067:17\n    at C:\\Users\\JOHNEY\\Documents\\project3\\health-app\\backend\\node_modules\\mongoose\\lib\\schemaType.js:1388:9\n    at processTicksAndRejections (node:internal/process/task_queues:78:11)"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 4000"}
{"level":"error","message":"Failed to start server: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{"ac-ypmnugh-shard-00-00.x2sgyae.mongodb.net:27017":{"$clusterTime":null,"address":"ac-ypmnugh-shard-00-00.x2sgyae.mongodb.net:27017","arbiters":[],"electionId":null,"error":{},"hosts":[],"lastUpdateTime":78176129,"lastWriteDate":0,"logicalSessionTimeoutMinutes":null,"maxWireVersion":0,"me":null,"minRoundTripTime":0,"minWireVersion":0,"passives":[],"primary":null,"roundTripTime":-1,"setName":null,"setVersion":null,"tags":{},"topologyVersion":null,"type":"Unknown"},"ac-ypmnugh-shard-00-01.x2sgyae.mongodb.net:27017":{"$clusterTime":null,"address":"ac-ypmnugh-shard-00-01.x2sgyae.mongodb.net:27017","arbiters":[],"electionId":null,"error":{},"hosts":[],"lastUpdateTime":78176750,"lastWriteDate":0,"logicalSessionTimeoutMinutes":null,"maxWireVersion":0,"me":null,"minRoundTripTime":0,"minWireVersion":0,"passives":[],"primary":null,"roundTripTime":-1,"setName":null,"setVersion":null,"tags":{},"topologyVersion":null,"type":"Unknown"},"ac-ypmnugh-shard-00-02.x2sgyae.mongodb.net:27017":{"$clusterTime":null,"address":"ac-ypmnugh-shard-00-02.x2sgyae.mongodb.net:27017","arbiters":[],"electionId":null,"error":{},"hosts":[],"lastUpdateTime":78176217,"lastWriteDate":0,"logicalSessionTimeoutMinutes":null,"maxWireVersion":0,"me":null,"minRoundTripTime":0,"minWireVersion":0,"passives":[],"primary":null,"roundTripTime":-1,"setName":null,"setVersion":null,"tags":{},"topologyVersion":null,"type":"Unknown"}},"setName":"atlas-uzttcn-shard-0","stale":false,"type":"ReplicaSetNoPrimary"},"stack":"MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n    at _handleConnectionErrors (C:\\Users\\JOHNEY\\Documents\\project3\\health-app\\backend\\node_modules\\mongoose\\lib\\connection.js:897:11)\n    at NativeConnection.openUri (C:\\Users\\JOHNEY\\Documents\\project3\\health-app\\backend\\node_modules\\mongoose\\lib\\connection.js:848:11)"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 4000"}
{"_message":"User validation failed","errors":{"email":{"kind":"required","message":"Path `email` is required.","name":"ValidatorError","path":"email","properties":{"message":"Path `email` is required.","path":"email","type":"required"}}},"level":"error","message":"Unexpected error: User validation failed: email: Path `email` is required.","stack":"ValidationError: User validation failed: email: Path `email` is required.\n    at model.Document.invalidate (C:\\Users\\JOHNEY\\Documents\\project3\\health-app\\backend\\node_modules\\mongoose\\lib\\document.js:3306:32)\n    at C:\\Users\\JOHNEY\\Documents\\project3\\health-app\\backend\\node_modules\\mongoose\\lib\\document.js:3067:17\n    at C:\\Users\\JOHNEY\\Documents\\project3\\health-app\\backend\\node_modules\\mongoose\\lib\\schemaType.js:1388:9\n    at processTicksAndRejections (node:internal/process/task_queues:78:11)"}
{"level":"error","message":"Failed to start server: connect ECONNREFUSED ::1:27017, connect ECONNREFUSED 127.0.0.1:27017","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{"localhost:27017":{"$clusterTime":null,"address":"localhost:27017","arbiters":[],"electionId":null,"error":{},"hosts":[],"lastUpdateTime":857533089,"lastWriteDate":0,"logicalSessionTimeoutMinutes":null,"maxWireVersion":0,"me":null,"minRoundTripTime":0,"minWireVersion":0,"passives":[],"primary":null,"roundTripTime":-1,"setName":null,"setVersion":null,"tags":{},"topologyVersion":null,"type":"Unknown"}},"setName":null,"stale":false,"type":"Unknown"},"stack":"MongooseServerSelectionError: connect ECONNREFUSED ::1:27017, connect ECONNREFUSED 127.0.0.1:27017\n    at _handleConnectionErrors (C:\\Users\\Daniel\\Desktop\\healthApp\\health-app-v2-backend\\node_modules\\mongoose\\lib\\connection.js:897:11)\n    at NativeConnection.openUri (C:\\Users\\Daniel\\Desktop\\healthApp\\health-app-v2-backend\\node_modules\\mongoose\\lib\\connection.js:848:11)"}
{"level":"error","message":"Failed to start server: connect ECONNREFUSED ::1:27017, connect ECONNREFUSED 127.0.0.1:27017","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{"localhost:27017":{"$clusterTime":null,"address":"localhost:27017","arbiters":[],"electionId":null,"error":{},"hosts":[],"lastUpdateTime":857750249,"lastWriteDate":0,"logicalSessionTimeoutMinutes":null,"maxWireVersion":0,"me":null,"minRoundTripTime":0,"minWireVersion":0,"passives":[],"primary":null,"roundTripTime":-1,"setName":null,"setVersion":null,"tags":{},"topologyVersion":null,"type":"Unknown"}},"setName":null,"stale":false,"type":"Unknown"},"stack":"MongooseServerSelectionError: connect ECONNREFUSED ::1:27017, connect ECONNREFUSED 127.0.0.1:27017\n    at _handleConnectionErrors (C:\\Users\\Daniel\\Desktop\\healthApp\\health-app-v2-backend\\node_modules\\mongoose\\lib\\connection.js:897:11)\n    at NativeConnection.openUri (C:\\Users\\Daniel\\Desktop\\healthApp\\health-app-v2-backend\\node_modules\\mongoose\\lib\\connection.js:848:11)"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"level":"error","message":"Failed to start server: connect ECONNREFUSED ::1:27017, connect ECONNREFUSED 127.0.0.1:27017","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{"localhost:27017":{"$clusterTime":null,"address":"localhost:27017","arbiters":[],"electionId":null,"error":{},"hosts":[],"lastUpdateTime":863374053,"lastWriteDate":0,"logicalSessionTimeoutMinutes":null,"maxWireVersion":0,"me":null,"minRoundTripTime":0,"minWireVersion":0,"passives":[],"primary":null,"roundTripTime":-1,"setName":null,"setVersion":null,"tags":{},"topologyVersion":null,"type":"Unknown"}},"setName":null,"stale":false,"type":"Unknown"},"stack":"MongooseServerSelectionError: connect ECONNREFUSED ::1:27017, connect ECONNREFUSED 127.0.0.1:27017\n    at _handleConnectionErrors (C:\\Users\\Daniel\\Desktop\\healthApp\\health-app-v2-backend\\node_modules\\mongoose\\lib\\connection.js:897:11)\n    at NativeConnection.openUri (C:\\Users\\Daniel\\Desktop\\healthApp\\health-app-v2-backend\\node_modules\\mongoose\\lib\\connection.js:848:11)"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"level":"error","message":"Failed to start server: connect ECONNREFUSED ::1:27017, connect ECONNREFUSED 127.0.0.1:27017","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{"localhost:27017":{"$clusterTime":null,"address":"localhost:27017","arbiters":[],"electionId":null,"error":{},"hosts":[],"lastUpdateTime":863544491,"lastWriteDate":0,"logicalSessionTimeoutMinutes":null,"maxWireVersion":0,"me":null,"minRoundTripTime":0,"minWireVersion":0,"passives":[],"primary":null,"roundTripTime":-1,"setName":null,"setVersion":null,"tags":{},"topologyVersion":null,"type":"Unknown"}},"setName":null,"stale":false,"type":"Unknown"},"stack":"MongooseServerSelectionError: connect ECONNREFUSED ::1:27017, connect ECONNREFUSED 127.0.0.1:27017\n    at _handleConnectionErrors (C:\\Users\\Daniel\\Desktop\\healthApp\\health-app-v2-backend\\node_modules\\mongoose\\lib\\connection.js:897:11)\n    at NativeConnection.openUri (C:\\Users\\Daniel\\Desktop\\healthApp\\health-app-v2-backend\\node_modules\\mongoose\\lib\\connection.js:848:11)"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"code":"ECONNRESET","errno":-4077,"level":"error","message":"Unexpected error: read ECONNRESET","stack":"Error: read ECONNRESET\n    at TLSWrap.onStreamRead (node:internal/stream_base_commons:218:20)","syscall":"read"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"code":"ECONNRESET","errno":-4077,"level":"error","message":"Unexpected error: read ECONNRESET","stack":"Error: read ECONNRESET\n    at TLSWrap.onStreamRead (node:internal/stream_base_commons:218:20)","syscall":"read"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"code":"ECONNRESET","errno":-4077,"level":"error","message":"Unexpected error: read ECONNRESET","stack":"Error: read ECONNRESET\n    at TLSWrap.onStreamRead (node:internal/stream_base_commons:218:20)","syscall":"read"}
{"code":"ECONNRESET","errno":-4077,"level":"error","message":"Unexpected error: read ECONNRESET","stack":"Error: read ECONNRESET\n    at TLSWrap.onStreamRead (node:internal/stream_base_commons:218:20)","syscall":"read"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"code":"ECONNRESET","errno":-4077,"level":"error","message":"Unexpected error: read ECONNRESET","stack":"Error: read ECONNRESET\n    at TLSWrap.onStreamRead (node:internal/stream_base_commons:218:20)","syscall":"read"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
{"code":"ECONNRESET","errno":-4077,"level":"error","message":"Unexpected error: read ECONNRESET","stack":"Error: read ECONNRESET\n    at TLSWrap.onStreamRead (node:internal/stream_base_commons:218:20)","syscall":"read"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 3000"}
